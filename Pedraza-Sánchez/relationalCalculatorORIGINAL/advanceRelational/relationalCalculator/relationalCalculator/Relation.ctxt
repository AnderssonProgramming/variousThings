#BlueJ class context
comment0.target=Relation
comment0.text=\r\n\ Representa\ una\ tabla\ relacional\ con\ atributos\ y\ tuplas.\r\n\ Los\ atributos\ se\ definen\ como\ columnas\ y\ las\ tuplas\ como\ filas\ de\ la\ tabla.\r\n\ Esta\ clase\ permite\ realizar\ operaciones\ sobre\ la\ relaci\u00F3n,\ como\ insertar,\ eliminar,\ proyectar,\ seleccionar,\ \r\n\ unir,\ e\ intersectar\ tuplas.\r\n\ \r\n\ @author\ Pedraza-S\u00E1nchez\r\n\ @version\ 2024\r\n
comment1.params=attributes
comment1.target=Relation(java.lang.String[])
comment1.text=\r\n\ Crea\ una\ nueva\ relaci\u00F3n\ con\ los\ atributos\ especificados.\r\n\ \r\n\ @param\ attributes\ Los\ atributos\ que\ definen\ las\ columnas\ de\ la\ relaci\u00F3n.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ No\ deben\ tener\ duplicados.\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ Retorna\ una\ representaci\u00F3n\ en\ formato\ de\ texto\ de\ la\ relaci\u00F3n.\r\n\ \r\n\ @return\ Una\ cadena\ que\ representa\ la\ relaci\u00F3n\ con\ atributos\ y\ tuplas.\r\n
comment11.params=newAttributes
comment11.target=Relation\ project(java.lang.String[])
comment11.text=\r\n\ Proyecta\ la\ relaci\u00F3n\ sobre\ los\ atributos\ especificados.\r\n\ \r\n\ @param\ newAttributes\ Los\ atributos\ sobre\ los\ que\ se\ proyectar\u00E1\ la\ relaci\u00F3n.\r\n\ @return\ Una\ nueva\ relaci\u00F3n\ con\ los\ atributos\ proyectados,\ o\ null\ si\ la\ proyecci\u00F3n\ es\ inv\u00E1lida.\r\n
comment12.params=conditionTuple
comment12.target=Relation\ select(java.lang.String[])
comment12.text=\r\n\ Selecciona\ las\ tuplas\ basadas\ en\ una\ condici\u00F3n\ derivada\ de\ una\ tupla.\r\n\ \r\n\ @param\ conditionTuple\ La\ tupla\ que\ representa\ la\ condici\u00F3n\ de\ selecci\u00F3n.\r\n\ @return\ Una\ nueva\ relaci\u00F3n\ con\ las\ tuplas\ seleccionadas.\r\n
comment13.params=other
comment13.target=Relation\ multiply(Relation)
comment13.text=\r\n\ Realiza\ la\ multiplicaci\u00F3n\ (producto\ cartesiano)\ de\ esta\ relaci\u00F3n\ con\ otra.\r\n\ \r\n\ @param\ other\ La\ relaci\u00F3n\ con\ la\ que\ se\ multiplicar\u00E1\ esta\ relaci\u00F3n.\r\n\ @return\ Una\ nueva\ relaci\u00F3n\ que\ contiene\ el\ producto\ cartesiano.\r\n
comment14.params=other
comment14.target=Relation\ union(Relation)
comment14.text=\r\n\ Realiza\ la\ uni\u00F3n\ de\ esta\ relaci\u00F3n\ con\ otra.\r\n\ \r\n\ @param\ other\ La\ relaci\u00F3n\ con\ la\ que\ se\ unir\u00E1\ esta\ relaci\u00F3n.\r\n\ @return\ Una\ nueva\ relaci\u00F3n\ que\ contiene\ todas\ las\ tuplas\ de\ ambas\ relaciones.\r\n
comment15.params=other
comment15.target=Relation\ intersection(Relation)
comment15.text=\r\n\ Realiza\ la\ intersecci\u00F3n\ de\ esta\ relaci\u00F3n\ con\ otra.\r\n\ \r\n\ @param\ other\ La\ relaci\u00F3n\ con\ la\ que\ se\ intersectar\u00E1\ esta\ relaci\u00F3n.\r\n\ @return\ Una\ nueva\ relaci\u00F3n\ que\ contiene\ solo\ las\ tuplas\ comunes.\r\n
comment2.params=tuple
comment2.target=boolean\ insert(java.lang.String[])
comment2.text=\r\n\ Inserta\ una\ tupla\ en\ la\ relaci\u00F3n.\r\n\ La\ tupla\ no\ se\ insertar\u00E1\ si\ ya\ existe\ una\ tupla\ igual\ ignorando\ may\u00FAsculas.\r\n\ \r\n\ @param\ tuple\ La\ tupla\ a\ insertar.\r\n\ @return\ true\ si\ la\ tupla\ se\ insert\u00F3\ correctamente,\ false\ si\ ya\ exist\u00EDa.\r\n
comment3.params=tuple
comment3.target=boolean\ delete(java.lang.String[])
comment3.text=\r\n\ Elimina\ una\ tupla\ de\ la\ relaci\u00F3n.\r\n\ \r\n\ @param\ tuple\ La\ tupla\ a\ eliminar.\r\n\ @return\ true\ si\ la\ tupla\ fue\ eliminada,\ false\ si\ no\ se\ encontr\u00F3.\r\n
comment4.params=
comment4.target=int\ columns()
comment4.text=\r\n\ Retorna\ el\ n\u00FAmero\ de\ columnas\ (atributos)\ de\ la\ relaci\u00F3n.\r\n\ \r\n\ @return\ El\ n\u00FAmero\ de\ columnas\ de\ la\ relaci\u00F3n.\r\n
comment5.params=
comment5.target=int\ tuples()
comment5.text=\r\n\ Retorna\ el\ n\u00FAmero\ de\ tuplas\ en\ la\ relaci\u00F3n.\r\n\ \r\n\ @return\ El\ n\u00FAmero\ de\ tuplas\ en\ la\ relaci\u00F3n.\r\n
comment6.params=
comment6.target=java.lang.String[]\ attributes()
comment6.text=\r\n\ Retorna\ los\ atributos\ (columnas)\ de\ la\ relaci\u00F3n.\r\n\ \r\n\ @return\ Un\ arreglo\ de\ los\ nombres\ de\ los\ atributos\ de\ la\ relaci\u00F3n.\r\n
comment7.params=tuple
comment7.target=boolean\ in(java.lang.String[])
comment7.text=\r\n\ Verifica\ si\ una\ tupla\ est\u00E1\ presente\ en\ la\ relaci\u00F3n.\r\n\ \r\n\ @param\ tuple\ La\ tupla\ a\ verificar.\r\n\ @return\ true\ si\ la\ tupla\ est\u00E1\ presente,\ false\ en\ caso\ contrario.\r\n
comment8.params=other
comment8.target=boolean\ equals(Relation)
comment8.text=\r\n\ Compara\ si\ dos\ relaciones\ son\ iguales\ en\ t\u00E9rminos\ de\ atributos\ y\ tuplas.\r\n\ \r\n\ @param\ other\ Otra\ relaci\u00F3n\ a\ comparar.\r\n\ @return\ true\ si\ ambas\ relaciones\ son\ iguales,\ false\ en\ caso\ contrario.\r\n
comment9.params=other
comment9.target=boolean\ equals(java.lang.Object)
numComments=16
