#BlueJ class context
comment0.target=RelationTest
comment0.text=\r\n\ Clase\ de\ prueba\ para\ la\ clase\ Relation.\r\n\ Proporciona\ pruebas\ unitarias\ para\ verificar\ la\ funcionalidad\ de\ la\ clase\ Relation.\r\n\ Incluye\ casos\ de\ prueba\ para\ la\ creaci\u00F3n\ de\ relaciones,\ inserci\u00F3n\ de\ tuplas,\ y\r\n\ operaciones\ de\ comparaci\u00F3n\ y\ manejo\ de\ errores.\r\n\ \r\n\ @author\ Pedraza-S\u00E1nchez\r\n\ @version\ 2024-2\r\n
comment1.params=
comment1.target=RelationTest()
comment1.text=\r\n\ Constructor\ por\ defecto\ para\ la\ clase\ de\ prueba\ RelationTest.\r\n
comment10.params=
comment10.target=void\ shouldErr()
comment10.text=\r\n\ Prueba\ que\ genera\ un\ error\ (ArithmeticException)\ al\ intentar\ dividir\ por\ cero.\r\n\ Verifica\ el\ manejo\ de\ excepciones.\r\n
comment11.params=
comment11.target=void\ tearDown()
comment11.text=\r\n\ M\u00E9todo\ de\ limpieza\ que\ se\ ejecuta\ despu\u00E9s\ de\ cada\ prueba.\r\n
comment2.params=
comment2.target=void\ setUp()
comment2.text=\r\n\ Configuraci\u00F3n\ inicial\ para\ las\ pruebas.\r\n\ Se\ ejecuta\ antes\ de\ cada\ m\u00E9todo\ de\ prueba.\r\n
comment3.params=
comment3.target=void\ shouldCreateAValidRelation()
comment3.text=\r\n\ Prueba\ para\ verificar\ que\ se\ puede\ crear\ una\ relaci\u00F3n\ v\u00E1lida\ con\ atributos.\r\n\ Verifica\ que\ se\ establezcan\ correctamente\ las\ columnas\ y\ que\ al\ inicio\ no\ tenga\ tuplas.\r\n
comment4.params=
comment4.target=void\ shouldCreateAEmptyRelationIfError()
comment4.text=\r\n\ Prueba\ para\ verificar\ que\ se\ crea\ una\ relaci\u00F3n\ vac\u00EDa\ cuando\ los\ atributos\ son\ inv\u00E1lidos\ (duplicados).\r\n
comment5.params=
comment5.target=void\ shouldInsertTuples()
comment5.text=\r\n\ Prueba\ para\ verificar\ la\ inserci\u00F3n\ de\ tuplas\ v\u00E1lidas\ en\ la\ relaci\u00F3n.\r\n\ La\ relaci\u00F3n\ debe\ aceptar\ tuplas\ con\ el\ n\u00FAmero\ correcto\ de\ atributos.\r\n
comment6.params=
comment6.target=void\ shouldNotInsertInvalidTuples()
comment6.text=\r\n\ Prueba\ para\ verificar\ que\ no\ se\ pueden\ insertar\ tuplas\ inv\u00E1lidas\r\n\ (cuando\ no\ coinciden\ los\ atributos).\r\n
comment7.params=
comment7.target=void\ shouldNotInsertRepeatedTuples()
comment7.text=\r\n\ Prueba\ para\ verificar\ que\ no\ se\ pueden\ insertar\ tuplas\ duplicadas\ (ignorando\ may\u00FAsculas).\r\n
comment8.params=
comment8.target=void\ shouldPass()
comment8.text=\r\n\ Prueba\ para\ varios\ casos\ exitosos\ usando\ diferentes\ m\u00E9todos\ de\ aserci\u00F3n.\r\n\ Incluye\ ejemplos\ de\ uso\ de\ assertArrayEquals,\ assertEquals\ y\ assertFalse.\r\n
comment9.params=
comment9.target=void\ shouldFail()
comment9.text=\r\n\ Prueba\ dise\u00F1ada\ para\ fallar\ deliberadamente\ usando\ el\ m\u00E9todo\ fail().\r\n\ Tambi\u00E9n\ incluye\ ejemplos\ de\ assertNull\ y\ assertTrue\ con\ resultados\ incorrectos.\r\n
numComments=12
