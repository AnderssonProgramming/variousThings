#BlueJ class context
comment0.target=RelationalCalculator
comment0.text=\ \r\n\ Calculadora\ Relacional.\r\n\ Permite\ la\ manipulaci\u00F3n\ de\ relaciones\ (tablas)\ con\ operaciones\ como\ insertar,\ eliminar,\ proyectar,\ \r\n\ seleccionar,\ multiplicar,\ unir\ e\ intersectar\ relaciones.\r\n\ \r\n\ @author\ Pedraza-S\u00E1nchez\r\n\ @version\ 2024\r\n
comment1.params=
comment1.target=RelationalCalculator()
comment1.text=\r\n\ Crea\ una\ nueva\ instancia\ de\ la\ calculadora\ relacional.\r\n
comment10.params=varName
comment10.target=Relation\ get(java.lang.String)
comment10.text=\r\n\ Retorna\ la\ relaci\u00F3n\ asignada\ a\ una\ variable.\r\n\ \r\n\ @param\ varName\ El\ nombre\ de\ la\ variable.\r\n\ @return\ La\ relaci\u00F3n\ correspondiente,\ o\ null\ si\ no\ existe.\r\n
comment2.params=name\ attributes
comment2.target=void\ assign(java.lang.String,\ java.lang.String[])
comment2.text=\r\n\ Asigna\ una\ relaci\u00F3n\ vac\u00EDa\ con\ los\ atributos\ especificados\ a\ una\ variable.\r\n\ \r\n\ @param\ name\ El\ nombre\ de\ la\ variable.\r\n\ @param\ attributes\ Los\ atributos\ de\ la\ nueva\ relaci\u00F3n.\r\n
comment3.params=a\ unary\ tuple
comment3.target=void\ update(java.lang.String,\ char,\ java.lang.String[])
comment3.text=\r\n\ Realiza\ una\ operaci\u00F3n\ unaria\ sobre\ una\ relaci\u00F3n\ (insertar\ o\ eliminar\ una\ tupla).\r\n\ \r\n\ @param\ a\ El\ nombre\ de\ la\ variable\ sobre\ la\ que\ se\ opera.\r\n\ @param\ unary\ El\ operador\ ('i'\ para\ insertar,\ 'd'\ para\ eliminar).\r\n\ @param\ tuple\ La\ tupla\ a\ insertar\ o\ eliminar.\r\n
comment4.params=a\ b\ operator\ c
comment4.target=void\ assign(java.lang.String,\ java.lang.String,\ char,\ java.lang.String)
comment4.text=\r\n\ Realiza\ una\ operaci\u00F3n\ binaria\ sobre\ dos\ relaciones.\r\n\ \r\n\ @param\ a\ El\ nombre\ de\ la\ variable\ destino.\r\n\ @param\ b\ El\ nombre\ de\ la\ primera\ relaci\u00F3n.\r\n\ @param\ operator\ El\ operador\ ('p'\ para\ proyectar,\ 's'\ para\ seleccionar,\ 'm'\ para\ multiplicar).\r\n\ @param\ c\ El\ nombre\ de\ la\ segunda\ relaci\u00F3n.\r\n
comment5.params=
comment5.target=java.lang.String[]\ variables()
comment5.text=\r\n\ Retorna\ una\ lista\ con\ los\ nombres\ de\ las\ variables\ asignadas.\r\n\ \r\n\ @return\ Un\ arreglo\ de\ nombres\ de\ variables.\r\n
comment6.params=variable
comment6.target=java.lang.String\ toString(java.lang.String)
comment6.text=\r\n\ Devuelve\ una\ representaci\u00F3n\ en\ texto\ de\ la\ relaci\u00F3n.\r\n\ \r\n\ @param\ variable\ El\ nombre\ de\ la\ variable.\r\n\ @return\ Una\ cadena\ con\ la\ representaci\u00F3n\ de\ la\ relaci\u00F3n.\r\n
comment7.params=
comment7.target=boolean\ ok()
comment7.text=\r\n\ Indica\ si\ la\ \u00FAltima\ operaci\u00F3n\ fue\ exitosa.\r\n\ \r\n\ @return\ true\ si\ la\ \u00FAltima\ operaci\u00F3n\ fue\ exitosa,\ false\ en\ caso\ contrario.\r\n
comment8.params=a\ b\ c
comment8.target=void\ assignUnion(java.lang.String,\ java.lang.String,\ java.lang.String)
comment8.text=\r\n\ Asigna\ la\ uni\u00F3n\ de\ dos\ relaciones\ a\ una\ variable.\r\n\ \r\n\ @param\ a\ El\ nombre\ de\ la\ variable\ destino.\r\n\ @param\ b\ El\ nombre\ de\ la\ primera\ relaci\u00F3n.\r\n\ @param\ c\ El\ nombre\ de\ la\ segunda\ relaci\u00F3n.\r\n
comment9.params=a\ b\ c
comment9.target=void\ assignIntersection(java.lang.String,\ java.lang.String,\ java.lang.String)
comment9.text=\r\n\ Asigna\ la\ intersecci\u00F3n\ de\ dos\ relaciones\ a\ una\ variable.\r\n\ \r\n\ @param\ a\ El\ nombre\ de\ la\ variable\ destino.\r\n\ @param\ b\ El\ nombre\ de\ la\ primera\ relaci\u00F3n.\r\n\ @param\ c\ El\ nombre\ de\ la\ segunda\ relaci\u00F3n.\r\n
numComments=11
